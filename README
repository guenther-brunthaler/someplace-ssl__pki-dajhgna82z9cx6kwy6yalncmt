This directory contains scripts for setting up and operating a Public Key
Infrastructure (PKI) based on the OpenSSL utility.

(c) 2013 by Guenther Brunthaler.
These scripts are free software.
Distribution is permitted under the terms of the GPLv3.

There are sub-directories containing scripts and configuration files for
different purposes:

* ca: Create a CA.

* client: Create client certificates signed by the CA.

* server: Create server certificates signed by the CA.

There is a single script *.sh in each of the directories for implementing the
job.

There is also a single file *.info which contains parameters such as company
name or country etc. required by the script.

The *.info files contain already example data which can already be used to
create all required certificates.

However, they should be edited to ensure the parameters match your actual
server/client/country etc. settings.

The general approach is as follows:

* Generate a single CA.

* Generate as many server and client certificates as required. All will be
signed by the CA generated before.

* The only difference between client and server certificates is the intended
use. They are otherwise identical.

* Ship the certificate of the CA to all the client computers which need to
verify that the server is trustworthy.

* Ship the CA certificate also to any server computers which need to
authenticate clients via client certificates.

* Never ever ship the CA's private key to anyone! It needs to be kept secret.

* Ensure the certificates shipped to the client or server computers cannot be
modified before they reach the destination computers. An easy way to do this
is deployment via SSH. Another way is sending them unencrypted via e-mail, but
use digital signatures. The certificates are not secret - but it must be
ensured they cannot maliciously be modified during transit without detection.

The public certificates and private keys generated by the scripts have
self-descriptive names.

Obviously, the private keys must be kept secret, while the public certificates
should be published or shipped to other computers.

All the scripts define variables containing the names of the files in the
first couple of lines.

While it is possible to change the variables in order to generate different
names, it might be easier to let them as they are and only rename the files
after they have been generated.

If more than one server or client certificate should be generated, it is
necessary to rename the generated private keys and public certificated anyway,
because otherwise they would be overwritten when running the script for
generating the next certificate.

The server and client generation scripts accept also a single argument which
should be the server's or client's mnemonic name. In this case, the generated
files will contain the provided name as part of the file names, therefore
eliminating the requirement to manually rename the files after creation in
order to avoid overwriting them when generating the next server/client.
